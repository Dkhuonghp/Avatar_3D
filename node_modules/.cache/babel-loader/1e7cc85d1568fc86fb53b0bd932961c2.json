{"ast":null,"code":"import { InstancedInterleavedBuffer, InterleavedBufferAttribute, Line3, MathUtils, Matrix4, Mesh, Vector3, Vector4 } from \"../../../build/three.module.js\";\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\n\nvar LineSegments2 = function LineSegments2(geometry, material) {\n  if (geometry === undefined) geometry = new LineSegmentsGeometry();\n  if (material === undefined) material = new LineMaterial({\n    color: Math.random() * 0xffffff\n  });\n  Mesh.call(this, geometry, material);\n  this.type = 'LineSegments2';\n};\n\nLineSegments2.prototype = Object.assign(Object.create(Mesh.prototype), {\n  constructor: LineSegments2,\n  isLineSegments2: true,\n  computeLineDistances: function () {\n    // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n    var start = new Vector3();\n    var end = new Vector3();\n    return function computeLineDistances() {\n      var geometry = this.geometry;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd;\n      var lineDistances = new Float32Array(2 * instanceStart.data.count);\n\n      for (var i = 0, j = 0, l = instanceStart.data.count; i < l; i++, j += 2) {\n        start.fromBufferAttribute(instanceStart, i);\n        end.fromBufferAttribute(instanceEnd, i);\n        lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n        lineDistances[j + 1] = lineDistances[j] + start.distanceTo(end);\n      }\n\n      var instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1); // d0, d1\n\n      geometry.setAttribute('instanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)); // d0\n\n      geometry.setAttribute('instanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)); // d1\n\n      return this;\n    };\n  }(),\n  raycast: function () {\n    var start = new Vector4();\n    var end = new Vector4();\n    var ssOrigin = new Vector4();\n    var ssOrigin3 = new Vector3();\n    var mvMatrix = new Matrix4();\n    var line = new Line3();\n    var closestPoint = new Vector3();\n    return function raycast(raycaster, intersects) {\n      if (raycaster.camera === null) {\n        console.error('LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.');\n      }\n\n      var threshold = raycaster.params.Line2 !== undefined ? raycaster.params.Line2.threshold || 0 : 0;\n      var ray = raycaster.ray;\n      var camera = raycaster.camera;\n      var projectionMatrix = camera.projectionMatrix;\n      var geometry = this.geometry;\n      var material = this.material;\n      var resolution = material.resolution;\n      var lineWidth = material.linewidth + threshold;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd; // pick a point 1 unit out along the ray to avoid the ray origin\n      // sitting at the camera origin which will cause \"w\" to be 0 when\n      // applying the projection matrix.\n\n      ray.at(1, ssOrigin); // ndc space [ - 1.0, 1.0 ]\n\n      ssOrigin.w = 1;\n      ssOrigin.applyMatrix4(camera.matrixWorldInverse);\n      ssOrigin.applyMatrix4(projectionMatrix);\n      ssOrigin.multiplyScalar(1 / ssOrigin.w); // screen space\n\n      ssOrigin.x *= resolution.x / 2;\n      ssOrigin.y *= resolution.y / 2;\n      ssOrigin.z = 0;\n      ssOrigin3.copy(ssOrigin);\n      var matrixWorld = this.matrixWorld;\n      mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld);\n\n      for (var i = 0, l = instanceStart.count; i < l; i++) {\n        start.fromBufferAttribute(instanceStart, i);\n        end.fromBufferAttribute(instanceEnd, i);\n        start.w = 1;\n        end.w = 1; // camera space\n\n        start.applyMatrix4(mvMatrix);\n        end.applyMatrix4(mvMatrix); // clip space\n\n        start.applyMatrix4(projectionMatrix);\n        end.applyMatrix4(projectionMatrix); // ndc space [ - 1.0, 1.0 ]\n\n        start.multiplyScalar(1 / start.w);\n        end.multiplyScalar(1 / end.w); // skip the segment if it's outside the camera near and far planes\n\n        var isBehindCameraNear = start.z < -1 && end.z < -1;\n        var isPastCameraFar = start.z > 1 && end.z > 1;\n\n        if (isBehindCameraNear || isPastCameraFar) {\n          continue;\n        } // screen space\n\n\n        start.x *= resolution.x / 2;\n        start.y *= resolution.y / 2;\n        end.x *= resolution.x / 2;\n        end.y *= resolution.y / 2; // create 2d segment\n\n        line.start.copy(start);\n        line.start.z = 0;\n        line.end.copy(end);\n        line.end.z = 0; // get closest point on ray to segment\n\n        var param = line.closestPointToPointParameter(ssOrigin3, true);\n        line.at(param, closestPoint); // check if the intersection point is within clip space\n\n        var zPos = MathUtils.lerp(start.z, end.z, param);\n        var isInClipSpace = zPos >= -1 && zPos <= 1;\n        var isInside = ssOrigin3.distanceTo(closestPoint) < lineWidth * 0.5;\n\n        if (isInClipSpace && isInside) {\n          line.start.fromBufferAttribute(instanceStart, i);\n          line.end.fromBufferAttribute(instanceEnd, i);\n          line.start.applyMatrix4(matrixWorld);\n          line.end.applyMatrix4(matrixWorld);\n          var pointOnLine = new Vector3();\n          var point = new Vector3();\n          ray.distanceSqToSegment(line.start, line.end, point, pointOnLine);\n          intersects.push({\n            point: point,\n            pointOnLine: pointOnLine,\n            distance: ray.origin.distanceTo(point),\n            object: this,\n            face: null,\n            faceIndex: i,\n            uv: null,\n            uv2: null\n          });\n        }\n      }\n    };\n  }()\n});\nexport { LineSegments2 };","map":{"version":3,"names":["InstancedInterleavedBuffer","InterleavedBufferAttribute","Line3","MathUtils","Matrix4","Mesh","Vector3","Vector4","LineSegmentsGeometry","LineMaterial","LineSegments2","geometry","material","undefined","color","Math","random","call","type","prototype","Object","assign","create","constructor","isLineSegments2","computeLineDistances","start","end","instanceStart","attributes","instanceEnd","lineDistances","Float32Array","data","count","i","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","setAttribute","raycast","ssOrigin","ssOrigin3","mvMatrix","line","closestPoint","raycaster","intersects","camera","console","error","threshold","params","Line2","ray","projectionMatrix","resolution","lineWidth","linewidth","at","w","applyMatrix4","matrixWorldInverse","multiplyScalar","x","y","z","copy","matrixWorld","multiplyMatrices","isBehindCameraNear","isPastCameraFar","param","closestPointToPointParameter","zPos","lerp","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","origin","object","face","faceIndex","uv","uv2"],"sources":["/Users/khuong/Downloads/avatar-homepage-demo-forked/node_modules/three/examples/jsm/lines/LineSegments2.js"],"sourcesContent":["import {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tif ( geometry === undefined ) geometry = new LineSegmentsGeometry();\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'LineSegments2';\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new Vector4();\n\t\tvar end = new Vector4();\n\n\t\tvar ssOrigin = new Vector4();\n\t\tvar ssOrigin3 = new Vector3();\n\t\tvar mvMatrix = new Matrix4();\n\t\tvar line = new Line3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth + threshold;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new Vector3();\n\t\t\t\t\tvar point = new Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport { LineSegments2 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}