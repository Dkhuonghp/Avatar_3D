{"ast":null,"code":"import { Curve, Vector3, Vector4 } from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function NURBSCurve(degree, knots\n/* array of reals */\n, controlPoints\n/* array of Vector(2|3|4) */\n, startKnot\n/* index in knots */\n, endKnot\n/* index in knots */\n) {\n  Curve.call(this);\n  this.degree = degree;\n  this.knots = knots;\n  this.controlPoints = []; // Used by periodic NURBS to remove hidden spans\n\n  this.startKnot = startKnot || 0;\n  this.endKnot = endKnot || this.knots.length - 1;\n\n  for (var i = 0; i < controlPoints.length; ++i) {\n    // ensure Vector4 for control points\n    var point = controlPoints[i];\n    this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n  }\n};\n\nNURBSCurve.prototype = Object.create(Curve.prototype);\nNURBSCurve.prototype.constructor = NURBSCurve;\n\nNURBSCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]); // linear mapping t->u\n  // following results in (wx, wy, wz, w) homogeneous point\n\n  var hpoint = NURBSUtils.calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n\n  if (hpoint.w != 1.0) {\n    // project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n    hpoint.divideScalar(hpoint.w);\n  }\n\n  return point.set(hpoint.x, hpoint.y, hpoint.z);\n};\n\nNURBSCurve.prototype.getTangent = function (t, optionalTarget) {\n  var tangent = optionalTarget || new Vector3();\n  var u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n  var ders = NURBSUtils.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n  tangent.copy(ders[1]).normalize();\n  return tangent;\n};\n\nexport { NURBSCurve };","map":{"version":3,"names":["Curve","Vector3","Vector4","NURBSUtils","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","call","length","i","point","x","y","z","w","prototype","Object","create","constructor","getPoint","t","optionalTarget","u","hpoint","calcBSplinePoint","divideScalar","set","getTangent","tangent","ders","calcNURBSDerivatives","copy","normalize"],"sources":["/Users/khuong/Downloads/avatar-homepage-demo-forked/node_modules/three/examples/jsm/curves/NURBSCurve.js"],"sourcesContent":["import {\n\tCurve,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tvar tangent = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\ttangent.copy( ders[ 1 ] ).normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}