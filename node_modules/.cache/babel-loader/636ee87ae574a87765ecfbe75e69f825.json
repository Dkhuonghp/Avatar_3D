{"ast":null,"code":"var i = new Map([[\"align-self\", \"-ms-grid-row-align\"], [\"color-adjust\", \"-webkit-print-color-adjust\"], [\"column-gap\", \"grid-column-gap\"], [\"forced-color-adjust\", \"-ms-high-contrast-adjust\"], [\"gap\", \"grid-gap\"], [\"grid-template-columns\", \"-ms-grid-columns\"], [\"grid-template-rows\", \"-ms-grid-rows\"], [\"justify-self\", \"-ms-grid-column-align\"], [\"margin-inline-end\", \"-webkit-margin-end\"], [\"margin-inline-start\", \"-webkit-margin-start\"], [\"mask-border\", \"-webkit-mask-box-image\"], [\"mask-border-outset\", \"-webkit-mask-box-image-outset\"], [\"mask-border-slice\", \"-webkit-mask-box-image-slice\"], [\"mask-border-source\", \"-webkit-mask-box-image-source\"], [\"mask-border-repeat\", \"-webkit-mask-box-image-repeat\"], [\"mask-border-width\", \"-webkit-mask-box-image-width\"], [\"overflow-wrap\", \"word-wrap\"], [\"padding-inline-end\", \"-webkit-padding-end\"], [\"padding-inline-start\", \"-webkit-padding-start\"], [\"row-gap\", \"grid-row-gap\"], [\"scroll-margin-bottom\", \"scroll-snap-margin-bottom\"], [\"scroll-margin-left\", \"scroll-snap-margin-left\"], [\"scroll-margin-right\", \"scroll-snap-margin-right\"], [\"scroll-margin-top\", \"scroll-snap-margin-top\"], [\"scroll-margin\", \"scroll-snap-margin\"], [\"text-combine-upright\", \"-ms-text-combine-horizontal\"]]);\n\nfunction r(r) {\n  return i.get(r);\n}\n\nfunction a(i) {\n  var r = /^(?:(text-(?:decoration$|e|or|si)|back(?:ground-cl|d|f)|box-d|mask(?:$|-[ispro]|-cl))|(tab-|column(?!-s)|text-align-l)|(ap)|(u|hy))/i.exec(i);\n  return r ? r[1] ? 1 : r[2] ? 2 : r[3] ? 3 : 5 : 0;\n}\n\nfunction t(i, r) {\n  var a = /^(?:(pos)|(cli)|(background-i)|((?:max-|min-)?(?:block-s|inl|he|widt))|(dis))/i.exec(i);\n  return a ? a[1] ? /^sti/i.test(r) ? 1 : 0 : a[2] ? /^pat/i.test(r) ? 1 : 0 : a[3] ? /^image-/i.test(r) ? 1 : 0 : a[4] ? \"-\" === r[3] ? 2 : 0 : /^(?:inline-)?grid$/i.test(r) ? 4 : 0 : 0;\n}\n\nexport { r as cssPropertyAlias, a as cssPropertyPrefixFlags, t as cssValuePrefixFlags };","map":{"version":3,"sources":["../../src/index.ts"],"names":["cssPropertyAliases","Map","cssPropertyAlias","property","get","cssPropertyPrefixFlags","matches","exec","cssValuePrefixFlags","value","test"],"mappings":"AAKA,IAAMA,CAAAA,GAAqB,IAAIC,GAAJ,CAAQ,CAC/B,CAAC,YAAD,EAAe,oBAAf,CAD+B,EAE/B,CAAC,cAAD,EAAiB,4BAAjB,CAF+B,EAG/B,CAAC,YAAD,EAAe,iBAAf,CAH+B,EAI/B,CAAC,qBAAD,EAAwB,0BAAxB,CAJ+B,EAK/B,CAAC,KAAD,EAAQ,UAAR,CAL+B,EAM/B,CAAC,uBAAD,EAA0B,kBAA1B,CAN+B,EAO/B,CAAC,oBAAD,EAAuB,eAAvB,CAP+B,EAQ/B,CAAC,cAAD,EAAiB,uBAAjB,CAR+B,EAS/B,CAAC,mBAAD,EAAsB,oBAAtB,CAT+B,EAU/B,CAAC,qBAAD,EAAwB,sBAAxB,CAV+B,EAW/B,CAAC,aAAD,EAAgB,wBAAhB,CAX+B,EAY/B,CAAC,oBAAD,EAAuB,+BAAvB,CAZ+B,EAa/B,CAAC,mBAAD,EAAsB,8BAAtB,CAb+B,EAc/B,CAAC,oBAAD,EAAuB,+BAAvB,CAd+B,EAe/B,CAAC,oBAAD,EAAuB,+BAAvB,CAf+B,EAgB/B,CAAC,mBAAD,EAAsB,8BAAtB,CAhB+B,EAiB/B,CAAC,eAAD,EAAkB,WAAlB,CAjB+B,EAkB/B,CAAC,oBAAD,EAAuB,qBAAvB,CAlB+B,EAmB/B,CAAC,sBAAD,EAAyB,uBAAzB,CAnB+B,EAoB/B,CAAC,SAAD,EAAY,cAAZ,CApB+B,EAqB/B,CAAC,sBAAD,EAAyB,2BAAzB,CArB+B,EAsB/B,CAAC,oBAAD,EAAuB,yBAAvB,CAtB+B,EAuB/B,CAAC,qBAAD,EAAwB,0BAAxB,CAvB+B,EAwB/B,CAAC,mBAAD,EAAsB,wBAAtB,CAxB+B,EAyB/B,CAAC,eAAD,EAAkB,oBAAlB,CAzB+B,EA0B/B,CAAC,sBAAD,EAAyB,6BAAzB,CA1B+B,CAAR,CAA3B;;AA0B6B,SAEbC,CAFa,CAEIC,CAFJ,EAEIA;EAC7B,OAAOH,CAAAA,CAAmBI,GAAnBJ,CAAuBG,CAAvBH,CAAP;AAA8BG;;AAAAA,SAElBE,CAFkBF,CAEKA,CAFLA,EAEKA;EACnC,IAAMG,CAAAA,GAAU,uIAAuIC,IAAvI,CAA4IJ,CAA5I,CAAhB;EACA,OAAKG,CAAAA,GAEDA,CAAAA,CAAQ,CAARA,CAAAA,GAAQ,CAARA,GAEAA,CAAAA,CAAQ,CAARA,CAAAA,GAAQ,CAARA,GAEAA,CAAAA,CAAQ,CAARA,CAAAA,GACO,CADPA,GAGO,CATNA,GACM,CADX;AACW;;AAAA,SAUCE,CAVD,CAUqBL,CAVrB,EAUuCM,CAVvC,EAUuCA;EAClD,IAAMH,CAAAA,GAAU,iFAAiFC,IAAjF,CAAsFJ,CAAtF,CAAhB;EACA,OAAKG,CAAAA,GAEDA,CAAAA,CAAQ,CAARA,CAAAA,GAEO,QAAQI,IAAR,CAAaD,CAAb,IAAaA,CAAb,GAAmD,CAF1DH,GAIKA,CAAAA,CAAQ,CAARA,CAAAA,GAEE,QAAQI,IAAR,CAAaD,CAAb,IAAaA,CAAb,GAAmD,CAFrDH,GAIAA,CAAAA,CAAQ,CAARA,CAAAA,GAEE,WAAWI,IAAX,CAAgBD,CAAhB,IAAgBA,CAAhB,GAAsD,CAFxDH,GAIAA,CAAAA,CAAQ,CAARA,CAAAA,GAEe,QAAbG,CAAAA,CAAM,CAANA,CAAa,GAAP,CAAO,GAAgC,CAF/CH,GAME,sBAAsBI,IAAtB,CAA2BD,CAA3B,IAA2BA,CAA3B,GAA6D,CApBnEH,GACM,CADX;AACW;;AAAA,SAAA,CAAA,IAAA,gBAAA,EAAA,CAAA,IAAA,sBAAA,EAAA,CAAA,IAAA,mBAAA","sourcesContent":["const enum CSSPrefixFlags {\n\t\"-webkit-\" = 1 << 0,\n\t\"-moz-\" = 1 << 1,\n\t\"-ms-\" = 1 << 2,\n}\n\nconst cssPropertyAliases = new Map([\n\t[\"align-self\", \"-ms-grid-row-align\"],\n\t[\"color-adjust\", \"-webkit-print-color-adjust\"],\n\t[\"column-gap\", \"grid-column-gap\"],\n\t[\"forced-color-adjust\", \"-ms-high-contrast-adjust\"],\n\t[\"gap\", \"grid-gap\"],\n\t[\"grid-template-columns\", \"-ms-grid-columns\"],\n\t[\"grid-template-rows\", \"-ms-grid-rows\"],\n\t[\"justify-self\", \"-ms-grid-column-align\"],\n\t[\"margin-inline-end\", \"-webkit-margin-end\"],\n\t[\"margin-inline-start\", \"-webkit-margin-start\"],\n\t[\"mask-border\", \"-webkit-mask-box-image\"],\n\t[\"mask-border-outset\", \"-webkit-mask-box-image-outset\"],\n\t[\"mask-border-slice\", \"-webkit-mask-box-image-slice\"],\n\t[\"mask-border-source\", \"-webkit-mask-box-image-source\"],\n\t[\"mask-border-repeat\", \"-webkit-mask-box-image-repeat\"],\n\t[\"mask-border-width\", \"-webkit-mask-box-image-width\"],\n\t[\"overflow-wrap\", \"word-wrap\"],\n\t[\"padding-inline-end\", \"-webkit-padding-end\"],\n\t[\"padding-inline-start\", \"-webkit-padding-start\"],\n\t[\"row-gap\", \"grid-row-gap\"],\n\t[\"scroll-margin-bottom\", \"scroll-snap-margin-bottom\"],\n\t[\"scroll-margin-left\", \"scroll-snap-margin-left\"],\n\t[\"scroll-margin-right\", \"scroll-snap-margin-right\"],\n\t[\"scroll-margin-top\", \"scroll-snap-margin-top\"],\n\t[\"scroll-margin\", \"scroll-snap-margin\"],\n\t[\"text-combine-upright\", \"-ms-text-combine-horizontal\"],\n]);\n\nexport function cssPropertyAlias(property: string): string | undefined {\n\treturn cssPropertyAliases.get(property);\n}\n\nexport function cssPropertyPrefixFlags(property: string): number {\n\tconst matches =\n\t\t/^(?:(text-(?:decoration$|e|or|si)|back(?:ground-cl|d|f)|box-d|mask(?:$|-[ispro]|-cl))|(tab-|column(?!-s)|text-align-l)|(ap)|(u|hy))/i.exec(\n\t\t\tproperty,\n\t\t);\n\n\tif (!matches) return 0;\n\n\tif (matches[1]) return CSSPrefixFlags[\"-webkit-\"];\n\tif (matches[2]) return CSSPrefixFlags[\"-moz-\"];\n\tif (matches[3]) return CSSPrefixFlags[\"-moz-\"] | CSSPrefixFlags[\"-webkit-\"];\n\telse return CSSPrefixFlags[\"-ms-\"] | CSSPrefixFlags[\"-webkit-\"];\n}\n\nexport function cssValuePrefixFlags(property: string, value: string): number {\n\tconst matches =\n\t\t/^(?:(pos)|(cli)|(background-i)|((?:max-|min-)?(?:block-s|inl|he|widt))|(dis))/i.exec(\n\t\t\tproperty,\n\t\t);\n\n\tif (!matches) return 0;\n\n\tif (matches[1]) {\n\t\t// position: \"sticky\"\n\t\treturn /^sti/i.test(value) ? CSSPrefixFlags[\"-webkit-\"] : 0;\n\t} else if (matches[2]) {\n\t\t// clip-path: \"path(…)\"\n\t\treturn /^pat/i.test(value) ? CSSPrefixFlags[\"-webkit-\"] : 0;\n\t} else if (matches[3]) {\n\t\t// background-image: \"image-set(…)\"\n\t\treturn /^image-/i.test(value) ? CSSPrefixFlags[\"-webkit-\"] : 0;\n\t} else if (matches[4]) {\n\t\t// (max-|min-)?(width|inline-size|height|block-size): \"min-content\" | \"max-content\" | \"fit-content\"\n\t\treturn value[3] === \"-\" ? CSSPrefixFlags[\"-moz-\"] : 0;\n\t} else {\n\t\t// display: \"grid\" | \"inline-grid\"\n\t\treturn /^(?:inline-)?grid$/i.test(value) ? CSSPrefixFlags[\"-ms-\"] : 0;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}