{"ast":null,"code":"import { BufferAttribute, BufferGeometry, FileLoader, Loader } from \"../../../build/three.module.js\";\n\nvar DRACOLoader = function DRACOLoader(manager) {\n  Loader.call(this, manager);\n  this.decoderPath = '';\n  this.decoderConfig = {};\n  this.decoderBinary = null;\n  this.decoderPending = null;\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.defaultAttributeIDs = {\n    position: 'POSITION',\n    normal: 'NORMAL',\n    color: 'COLOR',\n    uv: 'TEX_COORD'\n  };\n  this.defaultAttributeTypes = {\n    position: 'Float32Array',\n    normal: 'Float32Array',\n    color: 'Float32Array',\n    uv: 'Float32Array'\n  };\n};\n\nDRACOLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: DRACOLoader,\n  setDecoderPath: function setDecoderPath(path) {\n    this.decoderPath = path;\n    return this;\n  },\n  setDecoderConfig: function setDecoderConfig(config) {\n    this.decoderConfig = config;\n    return this;\n  },\n  setWorkerLimit: function setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n\n  /** @deprecated */\n  setVerbosity: function setVerbosity() {\n    console.warn('THREE.DRACOLoader: The .setVerbosity() method has been removed.');\n  },\n\n  /** @deprecated */\n  setDrawMode: function setDrawMode() {\n    console.warn('THREE.DRACOLoader: The .setDrawMode() method has been removed.');\n  },\n\n  /** @deprecated */\n  setSkipDequantization: function setSkipDequantization() {\n    console.warn('THREE.DRACOLoader: The .setSkipDequantization() method has been removed.');\n  },\n  load: function load(url, onLoad, onProgress, onError) {\n    var _this = this;\n\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      var taskConfig = {\n        attributeIDs: _this.defaultAttributeIDs,\n        attributeTypes: _this.defaultAttributeTypes,\n        useUniqueIDs: false\n      };\n\n      _this.decodeGeometry(buffer, taskConfig).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  },\n\n  /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n  decodeDracoFile: function decodeDracoFile(buffer, callback, attributeIDs, attributeTypes) {\n    var taskConfig = {\n      attributeIDs: attributeIDs || this.defaultAttributeIDs,\n      attributeTypes: attributeTypes || this.defaultAttributeTypes,\n      useUniqueIDs: !!attributeIDs\n    };\n    this.decodeGeometry(buffer, taskConfig).then(callback);\n  },\n  decodeGeometry: function decodeGeometry(buffer, taskConfig) {\n    var _this2 = this;\n\n    // TODO: For backward-compatibility, support 'attributeTypes' objects containing\n    // references (rather than names) to typed array constructors. These must be\n    // serialized before sending them to the worker.\n    for (var attribute in taskConfig.attributeTypes) {\n      var type = taskConfig.attributeTypes[attribute];\n\n      if (type.BYTES_PER_ELEMENT !== undefined) {\n        taskConfig.attributeTypes[attribute] = type.name;\n      }\n    } //\n\n\n    var taskKey = JSON.stringify(taskConfig); // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n    // again from this thread.\n\n    if (DRACOLoader.taskCache.has(buffer)) {\n      var cachedTask = DRACOLoader.taskCache.get(buffer);\n\n      if (cachedTask.key === taskKey) {\n        return cachedTask.promise;\n      } else if (buffer.byteLength === 0) {\n        // Technically, it would be possible to wait for the previous task to complete,\n        // transfer the buffer back, and decode again with the second configuration. That\n        // is complex, and I don't know of any reason to decode a Draco buffer twice in\n        // different ways, so this is left unimplemented.\n        throw new Error('THREE.DRACOLoader: Unable to re-decode a buffer with different ' + 'settings. Buffer has already been transferred.');\n      }\n    } //\n\n\n    var worker;\n    var taskID = this.workerNextTaskID++;\n    var taskCost = buffer.byteLength; // Obtain a worker and assign a task, and construct a geometry instance\n    // when the task completes.\n\n    var geometryPending = this._getWorker(taskID, taskCost).then(function (_worker) {\n      worker = _worker;\n      return new Promise(function (resolve, reject) {\n        worker._callbacks[taskID] = {\n          resolve: resolve,\n          reject: reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          taskConfig: taskConfig,\n          buffer: buffer\n        }, [buffer]); // this.debug();\n      });\n    }).then(function (message) {\n      return _this2._createGeometry(message.geometry);\n    }); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n    geometryPending.catch(function () {\n      return true;\n    }).then(function () {\n      if (worker && taskID) {\n        _this2._releaseTask(worker, taskID); // this.debug();\n\n      }\n    }); // Cache the task result.\n\n    DRACOLoader.taskCache.set(buffer, {\n      key: taskKey,\n      promise: geometryPending\n    });\n    return geometryPending;\n  },\n  _createGeometry: function _createGeometry(geometryData) {\n    var geometry = new BufferGeometry();\n\n    if (geometryData.index) {\n      geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n    }\n\n    for (var i = 0; i < geometryData.attributes.length; i++) {\n      var attribute = geometryData.attributes[i];\n      var name = attribute.name;\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      geometry.setAttribute(name, new BufferAttribute(array, itemSize));\n    }\n\n    return geometry;\n  },\n  _loadLibrary: function _loadLibrary(url, responseType) {\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.decoderPath);\n    loader.setResponseType(responseType);\n    loader.setWithCredentials(this.withCredentials);\n    return new Promise(function (resolve, reject) {\n      loader.load(url, resolve, undefined, reject);\n    });\n  },\n  preload: function preload() {\n    this._initDecoder();\n\n    return this;\n  },\n  _initDecoder: function _initDecoder() {\n    var _this3 = this;\n\n    if (this.decoderPending) return this.decoderPending;\n    var useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n    var librariesPending = [];\n\n    if (useJS) {\n      librariesPending.push(this._loadLibrary('draco_decoder.js', 'text'));\n    } else {\n      librariesPending.push(this._loadLibrary('draco_wasm_wrapper.js', 'text'));\n      librariesPending.push(this._loadLibrary('draco_decoder.wasm', 'arraybuffer'));\n    }\n\n    this.decoderPending = Promise.all(librariesPending).then(function (libraries) {\n      var jsContent = libraries[0];\n\n      if (!useJS) {\n        _this3.decoderConfig.wasmBinary = libraries[1];\n      }\n\n      var fn = DRACOLoader.DRACOWorker.toString();\n      var body = ['/* draco decoder */', jsContent, '', '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n      _this3.workerSourceURL = URL.createObjectURL(new Blob([body]));\n    });\n    return this.decoderPending;\n  },\n  _getWorker: function _getWorker(taskID, taskCost) {\n    var _this4 = this;\n\n    return this._initDecoder().then(function () {\n      if (_this4.workerPool.length < _this4.workerLimit) {\n        var worker = new Worker(_this4.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          decoderConfig: _this4.decoderConfig\n        });\n\n        worker.onmessage = function (e) {\n          var message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        _this4.workerPool.push(worker);\n      } else {\n        _this4.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      var worker = _this4.workerPool[_this4.workerPool.length - 1];\n      worker._taskCosts[taskID] = taskCost;\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  debug: function debug() {\n    console.log('Task load: ', this.workerPool.map(function (worker) {\n      return worker._taskLoad;\n    }));\n  },\n  dispose: function dispose() {\n    for (var i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nDRACOLoader.DRACOWorker = function () {\n  var decoderConfig;\n  var decoderPending;\n\n  onmessage = function onmessage(e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function (resolve\n        /*, reject*/\n        ) {\n          decoderConfig.onModuleLoaded = function (draco) {\n            // Module is Promise-like. Wrap before resolving to avoid loop.\n            resolve({\n              draco: draco\n            });\n          };\n\n          DracoDecoderModule(decoderConfig); // eslint-disable-line no-undef\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        var taskConfig = message.taskConfig;\n        decoderPending.then(function (module) {\n          var draco = module.draco;\n          var decoder = new draco.Decoder();\n          var decoderBuffer = new draco.DecoderBuffer();\n          decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n\n          try {\n            var geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n            var buffers = geometry.attributes.map(function (attr) {\n              return attr.array.buffer;\n            });\n            if (geometry.index) buffers.push(geometry.index.array.buffer);\n            self.postMessage({\n              type: 'decode',\n              id: message.id,\n              geometry: geometry\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: 'error',\n              id: message.id,\n              error: error.message\n            });\n          } finally {\n            draco.destroy(decoderBuffer);\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n\n  function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n    var attributeIDs = taskConfig.attributeIDs;\n    var attributeTypes = taskConfig.attributeTypes;\n    var dracoGeometry;\n    var decodingStatus;\n    var geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n    } else {\n      throw new Error('THREE.DRACOLoader: Unexpected geometry type.');\n    }\n\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error('THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg());\n    }\n\n    var geometry = {\n      index: null,\n      attributes: []\n    }; // Gather all vertex attributes.\n\n    for (var attributeName in attributeIDs) {\n      var attributeType = self[attributeTypes[attributeName]];\n      var attribute;\n      var attributeID; // A Draco file may be created with default vertex attributes, whose attribute IDs\n      // are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n      // a Draco file may contain a custom set of attributes, identified by known unique\n      // IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1) continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n\n      geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n    } // Add index.\n\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      geometry.index = decodeIndex(draco, decoder, dracoGeometry);\n    }\n\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n\n  function decodeIndex(draco, decoder, dracoGeometry) {\n    var numFaces = dracoGeometry.num_faces();\n    var numIndices = numFaces * 3;\n    var byteLength = numIndices * 4;\n\n    var ptr = draco._malloc(byteLength);\n\n    decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n    var index = new Uint32Array(draco.HEAPF32.buffer, ptr, numIndices).slice();\n\n    draco._free(ptr);\n\n    return {\n      array: index,\n      itemSize: 1\n    };\n  }\n\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    var numComponents = attribute.num_components();\n    var numPoints = dracoGeometry.num_points();\n    var numValues = numPoints * numComponents;\n    var byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n    var dataType = getDracoDataType(draco, attributeType);\n\n    var ptr = draco._malloc(byteLength);\n\n    decoder.GetAttributeDataArrayForAllPoints(dracoGeometry, attribute, dataType, byteLength, ptr);\n    var array = new attributeType(draco.HEAPF32.buffer, ptr, numValues).slice();\n\n    draco._free(ptr);\n\n    return {\n      name: attributeName,\n      array: array,\n      itemSize: numComponents\n    };\n  }\n\n  function getDracoDataType(draco, attributeType) {\n    switch (attributeType) {\n      case Float32Array:\n        return draco.DT_FLOAT32;\n\n      case Int8Array:\n        return draco.DT_INT8;\n\n      case Int16Array:\n        return draco.DT_INT16;\n\n      case Int32Array:\n        return draco.DT_INT32;\n\n      case Uint8Array:\n        return draco.DT_UINT8;\n\n      case Uint16Array:\n        return draco.DT_UINT16;\n\n      case Uint32Array:\n        return draco.DT_UINT32;\n    }\n  }\n};\n\nDRACOLoader.taskCache = new WeakMap();\n/** Deprecated static methods */\n\n/** @deprecated */\n\nDRACOLoader.setDecoderPath = function () {\n  console.warn('THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nDRACOLoader.setDecoderConfig = function () {\n  console.warn('THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nDRACOLoader.releaseDecoderModule = function () {\n  console.warn('THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nDRACOLoader.getDecoderModule = function () {\n  console.warn('THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.');\n};\n\nexport { DRACOLoader };","map":{"version":3,"names":["BufferAttribute","BufferGeometry","FileLoader","Loader","DRACOLoader","manager","call","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","position","normal","color","uv","defaultAttributeTypes","prototype","Object","assign","create","constructor","setDecoderPath","path","setDecoderConfig","config","setWorkerLimit","setVerbosity","console","warn","setDrawMode","setSkipDequantization","load","url","onLoad","onProgress","onError","loader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","then","catch","decodeDracoFile","callback","attribute","type","BYTES_PER_ELEMENT","undefined","name","taskKey","JSON","stringify","taskCache","has","cachedTask","get","key","promise","byteLength","Error","worker","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","geometry","_releaseTask","set","geometryData","index","setIndex","array","i","attributes","length","itemSize","setAttribute","_loadLibrary","responseType","preload","_initDecoder","useJS","WebAssembly","librariesPending","push","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","_taskLoad","onmessage","e","data","error","sort","a","b","debug","log","map","dispose","terminate","onModuleLoaded","draco","DracoDecoderModule","module","decoder","Decoder","decoderBuffer","DecoderBuffer","Init","Int8Array","buffers","attr","self","destroy","dracoGeometry","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","ptr","error_msg","attributeName","attributeType","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","decodeAttribute","decodeIndex","numFaces","num_faces","numIndices","_malloc","GetTrianglesUInt32Array","Uint32Array","HEAPF32","slice","_free","numComponents","num_components","numPoints","num_points","numValues","dataType","getDracoDataType","GetAttributeDataArrayForAllPoints","Float32Array","DT_FLOAT32","DT_INT8","Int16Array","DT_INT16","Int32Array","DT_INT32","Uint8Array","DT_UINT8","Uint16Array","DT_UINT16","DT_UINT32","WeakMap","releaseDecoderModule","getDecoderModule"],"sources":["/Users/khuong/Downloads/avatar-homepage-demo-forked/node_modules/three/examples/jsm/loaders/DRACOLoader.js"],"sourcesContent":["import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFileLoader,\n\tLoader\n} from \"../../../build/three.module.js\";\n\nvar DRACOLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.decoderPath = '';\n\tthis.decoderConfig = {};\n\tthis.decoderBinary = null;\n\tthis.decoderPending = null;\n\n\tthis.workerLimit = 4;\n\tthis.workerPool = [];\n\tthis.workerNextTaskID = 1;\n\tthis.workerSourceURL = '';\n\n\tthis.defaultAttributeIDs = {\n\t\tposition: 'POSITION',\n\t\tnormal: 'NORMAL',\n\t\tcolor: 'COLOR',\n\t\tuv: 'TEX_COORD'\n\t};\n\tthis.defaultAttributeTypes = {\n\t\tposition: 'Float32Array',\n\t\tnormal: 'Float32Array',\n\t\tcolor: 'Float32Array',\n\t\tuv: 'Float32Array'\n\t};\n\n};\n\nDRACOLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DRACOLoader,\n\n\tsetDecoderPath: function ( path ) {\n\n\t\tthis.decoderPath = path;\n\n\t\treturn this;\n\n\t},\n\n\tsetDecoderConfig: function ( config ) {\n\n\t\tthis.decoderConfig = config;\n\n\t\treturn this;\n\n\t},\n\n\tsetWorkerLimit: function ( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t},\n\n\t/** @deprecated */\n\tsetVerbosity: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setVerbosity() method has been removed.' );\n\n\t},\n\n\t/** @deprecated */\n\tsetDrawMode: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setDrawMode() method has been removed.' );\n\n\t},\n\n\t/** @deprecated */\n\tsetSkipDequantization: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setSkipDequantization() method has been removed.' );\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\tvar taskConfig = {\n\t\t\t\tattributeIDs: this.defaultAttributeIDs,\n\t\t\t\tattributeTypes: this.defaultAttributeTypes,\n\t\t\t\tuseUniqueIDs: false\n\t\t\t};\n\n\t\t\tthis.decodeGeometry( buffer, taskConfig )\n\t\t\t\t.then( onLoad )\n\t\t\t\t.catch( onError );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n\tdecodeDracoFile: function ( buffer, callback, attributeIDs, attributeTypes ) {\n\n\t\tvar taskConfig = {\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\n\t\t\tuseUniqueIDs: !! attributeIDs\n\t\t};\n\n\t\tthis.decodeGeometry( buffer, taskConfig ).then( callback );\n\n\t},\n\n\tdecodeGeometry: function ( buffer, taskConfig ) {\n\n\t\t// TODO: For backward-compatibility, support 'attributeTypes' objects containing\n\t\t// references (rather than names) to typed array constructors. These must be\n\t\t// serialized before sending them to the worker.\n\t\tfor ( var attribute in taskConfig.attributeTypes ) {\n\n\t\t\tvar type = taskConfig.attributeTypes[ attribute ];\n\n\t\t\tif ( type.BYTES_PER_ELEMENT !== undefined ) {\n\n\t\t\t\ttaskConfig.attributeTypes[ attribute ] = type.name;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar taskKey = JSON.stringify( taskConfig );\n\n\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t// again from this thread.\n\t\tif ( DRACOLoader.taskCache.has( buffer ) ) {\n\n\t\t\tvar cachedTask = DRACOLoader.taskCache.get( buffer );\n\n\t\t\tif ( cachedTask.key === taskKey ) {\n\n\t\t\t\treturn cachedTask.promise;\n\n\t\t\t} else if ( buffer.byteLength === 0 ) {\n\n\t\t\t\t// Technically, it would be possible to wait for the previous task to complete,\n\t\t\t\t// transfer the buffer back, and decode again with the second configuration. That\n\t\t\t\t// is complex, and I don't know of any reason to decode a Draco buffer twice in\n\t\t\t\t// different ways, so this is left unimplemented.\n\t\t\t\tthrow new Error(\n\n\t\t\t\t\t'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\n\t\t\t\t\t'settings. Buffer has already been transferred.'\n\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar worker;\n\t\tvar taskID = this.workerNextTaskID ++;\n\t\tvar taskCost = buffer.byteLength;\n\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\n\t\t// when the task completes.\n\t\tvar geometryPending = this._getWorker( taskID, taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\n\n\t\t// Remove task from the task list.\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\t\tgeometryPending\n\t\t\t.catch( () => true )\n\t\t\t.then( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\tDRACOLoader.taskCache.set( buffer, {\n\n\t\t\tkey: taskKey,\n\t\t\tpromise: geometryPending\n\n\t\t} );\n\n\t\treturn geometryPending;\n\n\t},\n\n\t_createGeometry: function ( geometryData ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tif ( geometryData.index ) {\n\n\t\t\tgeometry.setIndex( new BufferAttribute( geometryData.index.array, 1 ) );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < geometryData.attributes.length; i ++ ) {\n\n\t\t\tvar attribute = geometryData.attributes[ i ];\n\t\t\tvar name = attribute.name;\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tgeometry.setAttribute( name, new BufferAttribute( array, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\t_loadLibrary: function ( url, responseType ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.decoderPath );\n\t\tloader.setResponseType( responseType );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tloader.load( url, resolve, undefined, reject );\n\n\t\t} );\n\n\t},\n\n\tpreload: function () {\n\n\t\tthis._initDecoder();\n\n\t\treturn this;\n\n\t},\n\n\t_initDecoder: function () {\n\n\t\tif ( this.decoderPending ) return this.decoderPending;\n\n\t\tvar useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n\t\tvar librariesPending = [];\n\n\t\tif ( useJS ) {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\n\n\t\t} else {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\n\n\t\t}\n\n\t\tthis.decoderPending = Promise.all( librariesPending )\n\t\t\t.then( ( libraries ) => {\n\n\t\t\t\tvar jsContent = libraries[ 0 ];\n\n\t\t\t\tif ( ! useJS ) {\n\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar fn = DRACOLoader.DRACOWorker.toString();\n\n\t\t\t\tvar body = [\n\t\t\t\t\t'/* draco decoder */',\n\t\t\t\t\tjsContent,\n\t\t\t\t\t'',\n\t\t\t\t\t'/* worker */',\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t} );\n\n\t\treturn this.decoderPending;\n\n\t},\n\n\t_getWorker: function ( taskID, taskCost ) {\n\n\t\treturn this._initDecoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tvar message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\n\t\t\tworker._taskLoad += taskCost;\n\t\t\treturn worker;\n\n\t\t} );\n\n\t},\n\n\t_releaseTask: function ( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t},\n\n\tdebug: function () {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t},\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/* WEB WORKER */\n\nDRACOLoader.DRACOWorker = function () {\n\n\tvar decoderConfig;\n\tvar decoderPending;\n\n\tonmessage = function ( e ) {\n\n\t\tvar message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tdecoderConfig = message.decoderConfig;\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\n\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\n\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\n\t\t\t\t\t\tresolve( { draco: draco } );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tDracoDecoderModule( decoderConfig ); // eslint-disable-line no-undef\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\t\t\t\tvar buffer = message.buffer;\n\t\t\t\tvar taskConfig = message.taskConfig;\n\t\t\t\tdecoderPending.then( ( module ) => {\n\n\t\t\t\t\tvar draco = module.draco;\n\t\t\t\t\tvar decoder = new draco.Decoder();\n\t\t\t\t\tvar decoderBuffer = new draco.DecoderBuffer();\n\t\t\t\t\tdecoderBuffer.Init( new Int8Array( buffer ), buffer.byteLength );\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar geometry = decodeGeometry( draco, decoder, decoderBuffer, taskConfig );\n\n\t\t\t\t\t\tvar buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\n\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\n\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t} finally {\n\n\t\t\t\t\t\tdraco.destroy( decoderBuffer );\n\t\t\t\t\t\tdraco.destroy( decoder );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeGeometry( draco, decoder, decoderBuffer, taskConfig ) {\n\n\t\tvar attributeIDs = taskConfig.attributeIDs;\n\t\tvar attributeTypes = taskConfig.attributeTypes;\n\n\t\tvar dracoGeometry;\n\t\tvar decodingStatus;\n\n\t\tvar geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\n\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tdracoGeometry = new draco.Mesh();\n\t\t\tdecodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\n\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\n\n\t\t\tdracoGeometry = new draco.PointCloud();\n\t\t\tdecodingStatus = decoder.DecodeBufferToPointCloud( decoderBuffer, dracoGeometry );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\n\n\t\t}\n\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n\n\t\t}\n\n\t\tvar geometry = { index: null, attributes: [] };\n\n\t\t// Gather all vertex attributes.\n\t\tfor ( var attributeName in attributeIDs ) {\n\n\t\t\tvar attributeType = self[ attributeTypes[ attributeName ] ];\n\n\t\t\tvar attribute;\n\t\t\tvar attributeID;\n\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\t\t\tif ( taskConfig.useUniqueIDs ) {\n\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\n\n\t\t\t} else {\n\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\n\n\t\t\t\tif ( attributeID === - 1 ) continue;\n\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\n\n\t\t\t}\n\n\t\t\tgeometry.attributes.push( decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) );\n\n\t\t}\n\n\t\t// Add index.\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tgeometry.index = decodeIndex( draco, decoder, dracoGeometry );\n\n\t\t}\n\n\t\tdraco.destroy( dracoGeometry );\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction decodeIndex( draco, decoder, dracoGeometry ) {\n\n\t\tvar numFaces = dracoGeometry.num_faces();\n\t\tvar numIndices = numFaces * 3;\n\t\tvar byteLength = numIndices * 4;\n\n\t\tvar ptr = draco._malloc( byteLength );\n\t\tdecoder.GetTrianglesUInt32Array( dracoGeometry, byteLength, ptr );\n\t\tvar index = new Uint32Array( draco.HEAPF32.buffer, ptr, numIndices ).slice();\n\t\tdraco._free( ptr );\n\n\t\treturn { array: index, itemSize: 1 };\n\n\t}\n\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\n\n\t\tvar numComponents = attribute.num_components();\n\t\tvar numPoints = dracoGeometry.num_points();\n\t\tvar numValues = numPoints * numComponents;\n\t\tvar byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n\t\tvar dataType = getDracoDataType( draco, attributeType );\n\n\t\tvar ptr = draco._malloc( byteLength );\n\t\tdecoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, dataType, byteLength, ptr );\n\t\tvar array = new attributeType( draco.HEAPF32.buffer, ptr, numValues ).slice();\n\t\tdraco._free( ptr );\n\n\t\treturn {\n\t\t\tname: attributeName,\n\t\t\tarray: array,\n\t\t\titemSize: numComponents\n\t\t};\n\n\t}\n\n\tfunction getDracoDataType( draco, attributeType ) {\n\n\t\tswitch ( attributeType ) {\n\n\t\t\tcase Float32Array: return draco.DT_FLOAT32;\n\t\t\tcase Int8Array: return draco.DT_INT8;\n\t\t\tcase Int16Array: return draco.DT_INT16;\n\t\t\tcase Int32Array: return draco.DT_INT32;\n\t\t\tcase Uint8Array: return draco.DT_UINT8;\n\t\t\tcase Uint16Array: return draco.DT_UINT16;\n\t\t\tcase Uint32Array: return draco.DT_UINT32;\n\n\t\t}\n\n\t}\n\n};\n\nDRACOLoader.taskCache = new WeakMap();\n\n/** Deprecated static methods */\n\n/** @deprecated */\nDRACOLoader.setDecoderPath = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.setDecoderConfig = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.releaseDecoderModule = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.getDecoderModule = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.' );\n\n};\n\nexport { DRACOLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}