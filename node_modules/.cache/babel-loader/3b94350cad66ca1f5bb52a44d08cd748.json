{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { Geometry, BufferGeometry } from 'three';\nimport { EdgeSplitModifier } from 'three/examples/jsm/modifiers/EdgeSplitModifier';\n\nfunction useEdgeSplit(cutOffAngle) {\n  var ref = useRef();\n  var original = useRef();\n  var modifier = useRef();\n  useEffect(function () {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  useEffect(function () {\n    if (original.current && ref.current && modifier.current) {\n      var geometry = new Geometry();\n\n      if (original.current instanceof BufferGeometry) {\n        geometry.fromBufferGeometry(original.current);\n      } else {\n        geometry = original.current.clone();\n      }\n\n      var modifiedGeometry = modifier.current.modify(geometry, cutOffAngle);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle]);\n  return ref;\n}\n\nexport { useEdgeSplit };","map":{"version":3,"names":["useRef","useEffect","Geometry","BufferGeometry","EdgeSplitModifier","useEdgeSplit","cutOffAngle","ref","original","modifier","current","geometry","clone","fromBufferGeometry","modifiedGeometry","modify","computeVertexNormals"],"sources":["/Users/khuong/Downloads/avatar-homepage-demo-forked/node_modules/@react-three/drei/useEdgeSplit.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { Geometry, BufferGeometry } from 'three';\nimport { EdgeSplitModifier } from 'three/examples/jsm/modifiers/EdgeSplitModifier';\n\nfunction useEdgeSplit(cutOffAngle) {\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  useEffect(() => {\n    if (original.current && ref.current && modifier.current) {\n      let geometry = new Geometry();\n\n      if (original.current instanceof BufferGeometry) {\n        geometry.fromBufferGeometry(original.current);\n      } else {\n        geometry = original.current.clone();\n      }\n\n      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle]);\n  return ref;\n}\n\nexport { useEdgeSplit };\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;AACA,SAASC,iBAAT,QAAkC,gDAAlC;;AAEA,SAASC,YAAT,CAAsBC,WAAtB,EAAmC;EACjC,IAAMC,GAAG,GAAGP,MAAM,EAAlB;EACA,IAAMQ,QAAQ,GAAGR,MAAM,EAAvB;EACA,IAAMS,QAAQ,GAAGT,MAAM,EAAvB;EACAC,SAAS,CAAC,YAAM;IACd,IAAI,CAACO,QAAQ,CAACE,OAAV,IAAqBH,GAAG,CAACG,OAA7B,EAAsC;MACpCF,QAAQ,CAACE,OAAT,GAAmBH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBC,KAArB,EAAnB;MACAH,QAAQ,CAACC,OAAT,GAAmB,IAAIN,iBAAJ,EAAnB;IACD;EACF,CALQ,EAKN,EALM,CAAT;EAMAH,SAAS,CAAC,YAAM;IACd,IAAIO,QAAQ,CAACE,OAAT,IAAoBH,GAAG,CAACG,OAAxB,IAAmCD,QAAQ,CAACC,OAAhD,EAAyD;MACvD,IAAIC,QAAQ,GAAG,IAAIT,QAAJ,EAAf;;MAEA,IAAIM,QAAQ,CAACE,OAAT,YAA4BP,cAAhC,EAAgD;QAC9CQ,QAAQ,CAACE,kBAAT,CAA4BL,QAAQ,CAACE,OAArC;MACD,CAFD,MAEO;QACLC,QAAQ,GAAGH,QAAQ,CAACE,OAAT,CAAiBE,KAAjB,EAAX;MACD;;MAED,IAAME,gBAAgB,GAAGL,QAAQ,CAACC,OAAT,CAAiBK,MAAjB,CAAwBJ,QAAxB,EAAkCL,WAAlC,CAAzB;MACAQ,gBAAgB,CAACE,oBAAjB;MACAT,GAAG,CAACG,OAAJ,CAAYC,QAAZ,GAAuBG,gBAAvB;IACD;EACF,CAdQ,EAcN,CAACR,WAAD,CAdM,CAAT;EAeA,OAAOC,GAAP;AACD;;AAED,SAASF,YAAT"},"metadata":{},"sourceType":"module"}