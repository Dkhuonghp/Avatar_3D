{"ast":null,"code":"import { Pass } from \"../postprocessing/Pass.js\";\n\nvar MaskPass = function MaskPass(scene, camera) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.clear = true;\n  this.needsSwap = false;\n  this.inverse = false;\n};\n\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: MaskPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var context = renderer.getContext();\n    var state = renderer.state; // don't update color or depth\n\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false); // lock buffers\n\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true); // set up stencil\n\n    var writeValue, clearValue;\n\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n    state.buffers.stencil.setClear(clearValue);\n    state.buffers.stencil.setLocked(true); // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n    renderer.setRenderTarget(writeBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera); // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false); // only render where stencil is set to 1\n\n    state.buffers.stencil.setLocked(false);\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n    state.buffers.stencil.setLocked(true);\n  }\n});\n\nvar ClearMaskPass = function ClearMaskPass() {\n  Pass.call(this);\n  this.needsSwap = false;\n};\n\nClearMaskPass.prototype = Object.create(Pass.prototype);\nObject.assign(ClearMaskPass.prototype, {\n  render: function render(renderer\n  /*, writeBuffer, readBuffer, deltaTime, maskActive */\n  ) {\n    renderer.state.buffers.stencil.setLocked(false);\n    renderer.state.buffers.stencil.setTest(false);\n  }\n});\nexport { MaskPass, ClearMaskPass };","map":{"version":3,"names":["Pass","MaskPass","scene","camera","call","clear","needsSwap","inverse","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","context","getContext","state","buffers","color","setMask","depth","setLocked","writeValue","clearValue","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass"],"sources":["/Users/khuong/Downloads/avatar-homepage-demo-forked/node_modules/three/examples/jsm/postprocessing/MaskPass.js"],"sourcesContent":["import { Pass } from \"../postprocessing/Pass.js\";\n\nvar MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nvar ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport { MaskPass, ClearMaskPass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}