import { useRef, useEffect } from 'react';
import { Geometry, BufferGeometry } from 'three';
import { EdgeSplitModifier } from 'three/examples/jsm/modifiers/EdgeSplitModifier';

function useEdgeSplit(cutOffAngle) {
  const ref = useRef();
  const original = useRef();
  const modifier = useRef();
  useEffect(() => {
    if (!original.current && ref.current) {
      original.current = ref.current.geometry.clone();
      modifier.current = new EdgeSplitModifier();
    }
  }, []);
  useEffect(() => {
    if (original.current && ref.current && modifier.current) {
      let geometry = new Geometry();

      if (original.current instanceof BufferGeometry) {
        geometry.fromBufferGeometry(original.current);
      } else {
        geometry = original.current.clone();
      }

      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle);
      modifiedGeometry.computeVertexNormals();
      ref.current.geometry = modifiedGeometry;
    }
  }, [cutOffAngle]);
  return ref;
}

export { useEdgeSplit };
