import _extends from '@babel/runtime/helpers/esm/extends';
import { useRef, useState, useMemo, useEffect } from 'react';
import { useFrame } from 'react-three-fiber';
import { AnimationMixer } from 'three';

function useAnimations(clips, root) {
  const ref = useRef();
  const actualRef = root ? root : ref;
  const [mixer] = useState(() => new AnimationMixer(undefined));
  const api = useMemo(() => ({
    ref: actualRef,
    clips,
    actions: clips.reduce((prev, clip) => _extends({}, prev, {
      [clip.name]: null
    }), {}),
    names: clips.map(clip => clip.name),
    mixer
  }), [clips, mixer, actualRef]);
  useFrame((state, delta) => mixer.update(delta));
  useEffect(() => {
    const currentRoot = actualRef.current;
    clips.forEach(clip => api.actions[clip.name] = mixer.clipAction(clip, currentRoot));
    return () => Object.values(api.actions).forEach(action => mixer.uncacheAction(action, currentRoot));
  }, [api, clips, mixer, root, actualRef]);
  return api;
}

export { useAnimations };
