'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var React = require('react');
var reactThreeFiber = require('react-three-fiber');
var THREE = require('three');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);

function useAnimations(clips, root) {
  var ref = React.useRef();
  var actualRef = root ? root : ref;

  var _React$useState = React.useState(function () {
    return new THREE.AnimationMixer(undefined);
  }),
      mixer = _React$useState[0];

  var api = React.useMemo(function () {
    return {
      ref: actualRef,
      clips: clips,
      actions: clips.reduce(function (prev, clip) {
        var _extends2;

        return _extends__default['default']({}, prev, (_extends2 = {}, _extends2[clip.name] = null, _extends2));
      }, {}),
      names: clips.map(function (clip) {
        return clip.name;
      }),
      mixer: mixer
    };
  }, [clips, mixer, actualRef]);
  reactThreeFiber.useFrame(function (state, delta) {
    return mixer.update(delta);
  });
  React.useEffect(function () {
    var currentRoot = actualRef.current;
    clips.forEach(function (clip) {
      return api.actions[clip.name] = mixer.clipAction(clip, currentRoot);
    });
    return function () {
      return Object.values(api.actions).forEach(function (action) {
        return mixer.uncacheAction(action, currentRoot);
      });
    };
  }, [api, clips, mixer, root, actualRef]);
  return api;
}

exports.useAnimations = useAnimations;
